@model MVC.Models.WordleGame
@using Newtonsoft.Json
@{
    ViewData["Title"] = "Game";
}
@{
    string data = JsonConvert.SerializeObject(Model);

}
@section scripts
{
    <script src="~/Scripts/Wordle/WordleVM.js"></script>
    <script src="~/Scripts/knockout.mapping-latest.debug.js"></script>
    <script type="text/javascript">
        var wordleVM = new WordleVM(@Html.Raw(data));
        ko.applyBindings(wordleVM);
    </script>
    <script>
        var finalizado = false;
        var ganado = false;

        $("#intentar-button").click(function (e) {
            if ($("#palabra-intentada").val().length != @Model.WordLength) {
                alert("Error!! Chequear longitud de palabra")
                return;
            }
            if (finalizado) {
                alert("El juego ha terminado")
                return;
            }

            console.log($("#palabra-intentada").val())
            e.preventDefault();
            $.post('/Game/IntentarPalabra?palabra=' + $("#palabra-intentada").val(), function (data) {

                finalizado = data.Finish;
                ganado = data.Win;
                console.log(data)
                $('#palabras-container').html("");
                wordLenght = data.Dificultad * 2 + 1;
                for (var i = 0; i < data.PalabrasIntentadas.length; i++) {
                    $('#palabras-container').append("<div id='input-row" + i + "' class='input-row'></div>")
                    for (var j = 0; j <= wordLenght; j++) {

                        data.ResultadosIntentos[i][j] == "X"
                            ? $("#input-row" + i).append("<div style='background-color: #787c7e' class='col input-text' id='input-text" + i + j + "'></div >")
                            : data.ResultadosIntentos[i][j] == "-"
                                ? $("#input-row" + i).append("<div style='background-color: #c9b458' class='col input-text' id='input-text" + i + j + "'></div >")
                                : $("#input-row" + i).append("<div style='background-color: #6aaa64' class='col input-text' id='input-text" + i + j + "'></div >")
                        $("#input-text" + i + j).append("<p class='input-value'>" + data.PalabrasIntentadas[i][j] + "</p>")
                    }
                }
                for (var i = 0; i < (data.ErroresPosibles - data.PalabrasIntentadas.length); i++) {
                    $('#palabras-container').append("<div id='input-row-empty" + i + "' class='input-row'></div>")
                    for (var j = 0; j <= wordLenght; j++) {

                        $("#input-row-empty" + i).append("<div class='col input-text' id='input-text-empty" + i + j + "'></div >")
                        $("#input-text-empty" + i + j).append("<p class='input-value'></p>")
                    }
                }
                $("word-input").val("");

                if (data.Finish) {
                    if (data.Win) {
                        alert("WIN. GANASTE, FELICITACIONES!")
                    } else {
                        alert("GAME OVER, PERDEDOR.")
                    }
                }

            });
            console.log("finalizado: ",finalizado)
            console.log("ganado: ", ganado)

        })

    </script>
}

<hr>
<section class="input-section">
    <div class="left-side">
        <h2>Bienvenido @Html.DisplayFor(m => m.Nombre)!</h2>
        <div class="form-group">
            <div>
                <input maxlength="@Model.WordLength" class="word-input" placeholder="Ingresar palabra" id="palabra-intentada" />
                @*@Html.TextBoxFor(m => m.PalabraIntentada, new Dictionary<String, object>
                    {
                        { "class", "word-input" },
                        { "placeholder", "Ingrese palabra" },
                        { "data-bind", "value:PalabraIntentada" },
                        { "maxlength", Model.Dificultad == 1 ? 4 :  Model.Dificultad == 2 ? 6 : 8 }
                    })*@
            </div>
        </div>
        <button id="intentar-button" class="intentar-button">Intentar!</button>


        @*<h4>@Html.DisplayFor(m => m)</h4>*@


    </div>
    <div id="palabras-container" class="input-container">
        @Html.Partial("_Palabras", Model)
    </div>
</section>
<style>
    :root {
        --border-radius: 10px;
    }

    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: sans-serif;
    }

    .main-title {
        display: block;
        text-decoration: none;
        text-transform: uppercase;
        color: black;
        font-weight: 700;
        text-shadow: 0 0 10px #005276, 0 0 30px #005276;
    }

        .main-title:hover {
            color: rgba(0,0,0,0.7);
            transform: translateY(-10px);
        }

        .main-title:before {
            content: attr(data-text);
            position: absolute;
            bottom: -10px;
            pointer-events: none;
            z-index: 1;
            font-size: 0.35em;
            color: #00B2FF;
            font-weight: 800;
            letter-spacing: 100px;
            opacity: 0;
            transition: 0.5s;
            text-shadow: 0 0 10px #00B2FF, 0 0 30px #00B2FF, 0 0 80px #00B2FF;
        }

        .main-title:hover:before {
            letter-spacing: 6px;
            opacity: 1;
        }

    .left-side {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
    }

    .word-input {
        height: 50px;
        text-transform: uppercase;
        font-size: 24px;
        border-radius: var(--border-radius);
        padding: 0 0 0 15px;
    }

    .intentar-button {
        background-color: #1899D6;
        border: solid transparent;
        border-radius: 16px;
        border-width: 0 0 4px;
        box-sizing: border-box;
        color: #FFFFFF;
        cursor: pointer;
        display: inline-block;
        font-family: din-round, sans-serif;
        font-size: 15px;
        font-weight: 700;
        letter-spacing: .8px;
        line-height: 20px;
        margin: 15px 0 0 0;
        outline: none;
        overflow: visible;
        padding: 13px 16px;
        text-align: center;
        text-transform: uppercase;
        touch-action: manipulation;
        transform: translateZ(0);
        transition: filter .2s;
        user-select: none;
        -webkit-user-select: none;
        vertical-align: middle;
        white-space: nowrap;
        width: 80%;
        transition: transform .5s;
    }

        .intentar-button:after {
            background-clip: padding-box;
            background-color: #1CB0F6;
            border: solid transparent;
            border-radius: var(--border-radius);
            border-width: 0 0 4px;
            bottom: -4px;
            content: "";
            left: 0;
            position: absolute;
            right: 0;
            top: 0;
            z-index: -1;
        }

        .intentar-button:hover {
            transform: scale(.95);
        }

    .input-section {
        display: flex;
        flex-direction: row;
        justify-content: center;
        align-items: center;
        gap: 150px
    }

    .input-row .col p {
        font-size: 28px;
    }

    h1 {
        margin: 15px;
        text-align: center;
    }

    .input-container {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
    }

    /* After Input is taken */
    .input-row {
        display: flex;
        flex-direction: row;
        gap: 15px;
        margin-top: 15px;
    }

    .input-taken {
        border: 1px solid black;
    }

    /* Styling Input-text section */

    #input-section {
        margin-top: 25px;
        margin-bottom: 15px;
        width: 60%;
        margin-right: auto;
        margin-left: auto;
    }

    .input-text {
        border: 3px solid #d3d6da;
        border-radius: var(--border-radius);
        width: 55px;
        height: 65px;
        text-align: center;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .input-value {
        color: white;
        margin: 0;
        font-weight: 600;
    }

    .input-text-playable {
        border: 3px solid #00FFFF;
        border-radius: var(--border-radius);
        width: 55px;
        height: 65px;
        text-align: center;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .input-text-wrong {
        border: 3px solid #FF0000;
        background: #B90000;
        border-radius: var(--border-radius);
        width: 55px;
        height: 65px;
        text-align: center;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .input-text-correct {
        border: 3px solid #00FF00;
        background: #08B402;
        border-radius: var(--border-radius);
        width: 55px;
        height: 65px;
        text-align: center;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .input-text-good {
        border: 3px solid #FFFF00;
        background: #B9BF00;
        border-radius: var(--border-radius);
        width: 55px;
        height: 65px;
        text-align: center;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .input-text-disable {
        border: 3px solid #818181;
        background-color: #818181;
        border-radius: var(--border-radius);
        width: 55px;
        height: 65px;
        text-align: center;
        display: flex;
        justify-content: center;
        align-items: center;
    }
</style>